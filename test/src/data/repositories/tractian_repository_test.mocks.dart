// Mocks generated by Mockito 5.4.5 from annotations
// in tractian/test/src/data/repositories/tractian_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tractian/src/data/models/asset_model.dart' as _i6;
import 'package:tractian/src/data/models/company_model.dart' as _i4;
import 'package:tractian/src/data/models/config_model.dart' as _i8;
import 'package:tractian/src/data/models/location_model.dart' as _i5;
import 'package:tractian/src/data/services/local/assets_local_service.dart'
    as _i11;
import 'package:tractian/src/data/services/local/company_local_service.dart'
    as _i9;
import 'package:tractian/src/data/services/local/config_local_service.dart'
    as _i7;
import 'package:tractian/src/data/services/local/location_local_service.dart'
    as _i10;
import 'package:tractian/src/data/services/remote/tractian_api_service.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TractianApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTractianApiService extends _i1.Mock
    implements _i2.TractianApiService {
  MockTractianApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CompanyModel>> getCompanies() =>
      (super.noSuchMethod(
            Invocation.method(#getCompanies, []),
            returnValue: _i3.Future<List<_i4.CompanyModel>>.value(
              <_i4.CompanyModel>[],
            ),
          )
          as _i3.Future<List<_i4.CompanyModel>>);

  @override
  _i3.Future<List<_i5.LocationModel>> getLocationsByCompany(
    String? companyId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getLocationsByCompany, [companyId]),
            returnValue: _i3.Future<List<_i5.LocationModel>>.value(
              <_i5.LocationModel>[],
            ),
          )
          as _i3.Future<List<_i5.LocationModel>>);

  @override
  _i3.Future<List<_i6.AssetModel>> getAssetsByCompany(String? companyId) =>
      (super.noSuchMethod(
            Invocation.method(#getAssetsByCompany, [companyId]),
            returnValue: _i3.Future<List<_i6.AssetModel>>.value(
              <_i6.AssetModel>[],
            ),
          )
          as _i3.Future<List<_i6.AssetModel>>);
}

/// A class which mocks [ConfigLocalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigLocalService extends _i1.Mock
    implements _i7.ConfigLocalService {
  MockConfigLocalService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> updateConfig(_i8.ConfigModel? config) =>
      (super.noSuchMethod(
            Invocation.method(#updateConfig, [config]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> needSyncCompanies() =>
      (super.noSuchMethod(
            Invocation.method(#needSyncCompanies, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> updateLastSyncCompanies() =>
      (super.noSuchMethod(
            Invocation.method(#updateLastSyncCompanies, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> needSyncLocations() =>
      (super.noSuchMethod(
            Invocation.method(#needSyncLocations, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> updateLastSyncLocations() =>
      (super.noSuchMethod(
            Invocation.method(#updateLastSyncLocations, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> needSyncAssets() =>
      (super.noSuchMethod(
            Invocation.method(#needSyncAssets, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> updateLastSyncAssets() =>
      (super.noSuchMethod(
            Invocation.method(#updateLastSyncAssets, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [CompanyLocalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCompanyLocalService extends _i1.Mock
    implements _i9.CompanyLocalService {
  MockCompanyLocalService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveCompanies(List<_i4.CompanyModel>? companies) =>
      (super.noSuchMethod(
            Invocation.method(#saveCompanies, [companies]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.CompanyModel>> getCompanies() =>
      (super.noSuchMethod(
            Invocation.method(#getCompanies, []),
            returnValue: _i3.Future<List<_i4.CompanyModel>>.value(
              <_i4.CompanyModel>[],
            ),
          )
          as _i3.Future<List<_i4.CompanyModel>>);
}

/// A class which mocks [LocationLocalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationLocalService extends _i1.Mock
    implements _i10.LocationLocalService {
  MockLocationLocalService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveLocations(
    String? companyId,
    List<_i5.LocationModel>? locations,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveLocations, [companyId, locations]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.LocationModel>> getLocationsByCompany(
    String? companyId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getLocationsByCompany, [companyId]),
            returnValue: _i3.Future<List<_i5.LocationModel>>.value(
              <_i5.LocationModel>[],
            ),
          )
          as _i3.Future<List<_i5.LocationModel>>);

  @override
  _i3.Future<List<_i5.LocationModel>> filterLocations({
    required String? companyId,
    String? query = '',
  }) =>
      (super.noSuchMethod(
            Invocation.method(#filterLocations, [], {
              #companyId: companyId,
              #query: query,
            }),
            returnValue: _i3.Future<List<_i5.LocationModel>>.value(
              <_i5.LocationModel>[],
            ),
          )
          as _i3.Future<List<_i5.LocationModel>>);
}

/// A class which mocks [AssetsLocalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssetsLocalService extends _i1.Mock
    implements _i11.AssetsLocalService {
  MockAssetsLocalService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveAssets(
    String? companyId,
    List<_i6.AssetModel>? assets,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveAssets, [companyId, assets]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i6.AssetModel>> getAssetsByCompany(String? companyId) =>
      (super.noSuchMethod(
            Invocation.method(#getAssetsByCompany, [companyId]),
            returnValue: _i3.Future<List<_i6.AssetModel>>.value(
              <_i6.AssetModel>[],
            ),
          )
          as _i3.Future<List<_i6.AssetModel>>);

  @override
  _i3.Future<List<_i6.AssetModel>> filterAssets({
    required String? companyId,
    List<String>? lstLocationId,
    String? query = '',
    String? sensorType = '',
    String? status = '',
    bool? includeHierarchy = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#filterAssets, [], {
              #companyId: companyId,
              #lstLocationId: lstLocationId,
              #query: query,
              #sensorType: sensorType,
              #status: status,
              #includeHierarchy: includeHierarchy,
            }),
            returnValue: _i3.Future<List<_i6.AssetModel>>.value(
              <_i6.AssetModel>[],
            ),
          )
          as _i3.Future<List<_i6.AssetModel>>);
}
