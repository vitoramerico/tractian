// Mocks generated by Mockito 5.4.5 from annotations
// in tractian/test/src/presenter/assets/pages/components/filter_buttons_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i9;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tractian/src/core/utils/command.dart' as _i2;
import 'package:tractian/src/data/models/asset_model.dart' as _i5;
import 'package:tractian/src/data/models/location_model.dart' as _i4;
import 'package:tractian/src/domain/entity/filter_entity.dart' as _i6;
import 'package:tractian/src/domain/entity/tree_node_entity.dart' as _i7;
import 'package:tractian/src/presenter/assets/view_models/assets_view_model.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCommand1_0<T, A> extends _i1.SmartFake
    implements _i2.Command1<T, A> {
  _FakeCommand1_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCommand0_1<T> extends _i1.SmartFake implements _i2.Command0<T> {
  _FakeCommand0_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AssetsViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssetsViewModel extends _i1.Mock implements _i3.AssetsViewModel {
  MockAssetsViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Command1<List<_i4.LocationModel>, String> get getLocationsByCompany =>
      (super.noSuchMethod(
            Invocation.getter(#getLocationsByCompany),
            returnValue: _FakeCommand1_0<List<_i4.LocationModel>, String>(
              this,
              Invocation.getter(#getLocationsByCompany),
            ),
          )
          as _i2.Command1<List<_i4.LocationModel>, String>);

  @override
  set getLocationsByCompany(
    _i2.Command1<List<_i4.LocationModel>, String>? _getLocationsByCompany,
  ) => super.noSuchMethod(
    Invocation.setter(#getLocationsByCompany, _getLocationsByCompany),
    returnValueForMissingStub: null,
  );

  @override
  _i2.Command1<List<_i5.AssetModel>, String> get getAssetsByCompany =>
      (super.noSuchMethod(
            Invocation.getter(#getAssetsByCompany),
            returnValue: _FakeCommand1_0<List<_i5.AssetModel>, String>(
              this,
              Invocation.getter(#getAssetsByCompany),
            ),
          )
          as _i2.Command1<List<_i5.AssetModel>, String>);

  @override
  set getAssetsByCompany(
    _i2.Command1<List<_i5.AssetModel>, String>? _getAssetsByCompany,
  ) => super.noSuchMethod(
    Invocation.setter(#getAssetsByCompany, _getAssetsByCompany),
    returnValueForMissingStub: null,
  );

  @override
  _i2.Command1<void, _i6.FilterEntity> get getFilteredAssetsAndLocation =>
      (super.noSuchMethod(
            Invocation.getter(#getFilteredAssetsAndLocation),
            returnValue: _FakeCommand1_0<void, _i6.FilterEntity>(
              this,
              Invocation.getter(#getFilteredAssetsAndLocation),
            ),
          )
          as _i2.Command1<void, _i6.FilterEntity>);

  @override
  set getFilteredAssetsAndLocation(
    _i2.Command1<void, _i6.FilterEntity>? _getFilteredAssetsAndLocation,
  ) => super.noSuchMethod(
    Invocation.setter(
      #getFilteredAssetsAndLocation,
      _getFilteredAssetsAndLocation,
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i2.Command0<List<_i7.TreeNodeEntity>> get buildTreeStructure =>
      (super.noSuchMethod(
            Invocation.getter(#buildTreeStructure),
            returnValue: _FakeCommand0_1<List<_i7.TreeNodeEntity>>(
              this,
              Invocation.getter(#buildTreeStructure),
            ),
          )
          as _i2.Command0<List<_i7.TreeNodeEntity>>);

  @override
  set buildTreeStructure(
    _i2.Command0<List<_i7.TreeNodeEntity>>? _buildTreeStructure,
  ) => super.noSuchMethod(
    Invocation.setter(#buildTreeStructure, _buildTreeStructure),
    returnValueForMissingStub: null,
  );

  @override
  List<_i4.LocationModel> get lstLocation =>
      (super.noSuchMethod(
            Invocation.getter(#lstLocation),
            returnValue: <_i4.LocationModel>[],
          )
          as List<_i4.LocationModel>);

  @override
  List<_i5.AssetModel> get lstAssets =>
      (super.noSuchMethod(
            Invocation.getter(#lstAssets),
            returnValue: <_i5.AssetModel>[],
          )
          as List<_i5.AssetModel>);

  @override
  List<_i7.TreeNodeEntity> get lstTreeNode =>
      (super.noSuchMethod(
            Invocation.getter(#lstTreeNode),
            returnValue: <_i7.TreeNodeEntity>[],
          )
          as List<_i7.TreeNodeEntity>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void setLstLocation(List<_i4.LocationModel>? value) => super.noSuchMethod(
    Invocation.method(#setLstLocation, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setLstAssets(List<_i5.AssetModel>? value) => super.noSuchMethod(
    Invocation.method(#setLstAssets, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setLstTreeNode(List<_i7.TreeNodeEntity>? value) => super.noSuchMethod(
    Invocation.method(#setLstTreeNode, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void setFilter(_i6.FilterEntity? value) => super.noSuchMethod(
    Invocation.method(#setFilter, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void onSearchChanged(String? text) => super.noSuchMethod(
    Invocation.method(#onSearchChanged, [text]),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<void> init(String? companyId) =>
      (super.noSuchMethod(
            Invocation.method(#init, [companyId]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
